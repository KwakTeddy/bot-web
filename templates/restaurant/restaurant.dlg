var path = require('path')
var address = require(path.resolve('./modules/bot/action/common/address'));
var type = require(path.resolve('./modules/bot/action/common/type'));
var restaurant = require('./restaurant');

<전화
<전화번호
>전화번호는 +phone+ 입니다.

// ****************** 위치 ****************** //
<위치
<찾아가다
<어떻다 가다
<가다 방법
restaurant.mapTask
>저희 매장의 주소는\n+address+\n입니다.


// ****************** 메뉴 ****************** //
<메뉴
{action: restaurant.menuCategoryAction}
>[메뉴판]\n##+index+. +name+\n#목록에서 번호를 선택해주세요.

<메뉴
<메뉴판
<메뉴 알리다
<메뉴 뭐
restaurant.menuImageTask
>메뉴판을 보여드리겠습니다.

<{types: [restaurant.menuType]}
'menuTask'
>#typeDoc#+index+. +name+ +price+원\n#

// ****************** 영업시간 ****************** //
날짜체크:
<{types: [{name: 'date', typeCheck: 'dateTypeCheck', raw: true}], regexp: /~영업/}
{action: restaurant.checkDate}
>if(context.dialog.check == true) 죄송합니다. 해당 일자는 영업일이 아닙니다.\n영업시간은 +startTime+부터\n+endTime+까지이며,\n+holiday+은 휴무입니다.
>if(context.dialog.check == false) 네 영업일입니다.\n영업시간은 +startTime+부터\n+endTime+까지이며,\n+holiday+은 휴무입니다.

시간체크:
<{types: [{name: 'time', typeCheck: 'timeTypeCheck', raw: true}], regexp: /~영업/}
{action: restaurant.checkTime}
>if(context.dialog.check == true) 죄송합니다. 영업시간이 아닙니다.\n영업시간은 +startTime+부터\n+endTime+까지이며,\n+holiday+은 휴무입니다.
>if(context.dialog.check == false) 네 영업시간 입니다. \n영업시간은 +startTime+부터\n+endTime+까지이며,\n+holiday+은 휴무입니다.
>if(context.dialog.check == 're') 오후 / 오전을 붙여서 이야기 해주세요.\n예시: 오후 2시 영업해?, 14시 영업해?

<영업 시간
<몇 시
<언제 끝
<언제 시작
>영업시간은 +startTime+ 에서 +endTime+ 입니다.\n+holiday+은 휴무입니다.


// ****************** 예약 ****************** //
예약내역:
<예약 취소
<예약 확인
<예약 내
restaurant.reserveCheck
>if(context.botUser.isOwner && context.dialog.reserves != undefined) 미처리 예약내역입니다.\n#reserves#+index+. +name+ +dateStr+ +time+ +numOfPerson+명 [+status+]\n#\n처리할 예약번호를 말씀해주세요.
    <{types: [{name: 'reserve', listName: 'reserves', typeCheck: 'listTypeCheck'}]}
    {action: function(task, context, callback) { task.result = {smartReply: ['예약확정', '예약취소']}; callback(task, context);}}
    >상세 예약내역입니다.\n상태: +reserve.status+\n예약자명: +reserve.name+\n일시: +reserve.dateStr+ +reserve.time+\n인원: +reserve.numOfPerson+명\n연락처: +reserve.mobile+\n\n"확정", "취소"를 선택해 주세요.
        <~확정
        'reserveOwnerConfirm'
        >{call: '예약내역', options: {prefix: '예약이 확정 되었습니다. 고객님에게 문자가 발송되었습니다.\n\n'}}
        <~취소
        >취소 이유를 입력해주세요.
            <{if: 'true'}
            'reserveOwnerCancel'
            >{call: '예약내역', options: {prefix: '예약이 취소 되었습니다.\n\n'}}
        <{if: 'true'}
        >{repeat: 1, options: {output: '"확정" 또는 "취소"라고 말씀해주세요.'}}
    <{if: 'true'}
    >{repeat: 1, options: {prefix: '목록에서 선택해주세요.\n'}}
>if(context.botUser.isOwner && context.dialog.reserves == undefined) 미처리 예약내역이 없습니다.
>if(context.dialog.reserves != undefined) 고객님의 예약 내역입니다.\n#reserves#+index+. +dateStr+ +time+ +numOfPerson+명 [+status+]\n#\n예약을 취소하시려면, 취소할 번호를 말씀해주세요.
    <{types: [{name: 'reserve', listName: 'reserves', typeCheck: 'listTypeCheck'}]}
    'reserveCancel'
    >예약이 취소되었습니다.
    <{if: 'true'}
    >{repeat: 1, options: {prefix: '목록에서 선택해주세요.\n'}}
>if(context.dialog.reserve != undefined) 고객님의 예약 내역입니다.\n상태: +reserve.status+\n일시: +reserve.dateStr+ +reserve.time+\n인원: +reserve.numOfPerson+명\n예약자명: +reserve.name+\n연락처: +reserve.mobile+\n\n예약을 취소하시려면 "취소"라고 말씀해주세요.
    <취소
    'reserveCancel'
    >예약이 취소되었습니다.
> 고객님의 예약내역이 없습니다.

<예약
>{call: '날짜선택'}
    날짜선택:<false
    >예약하실 일자를 말씀해 주세요.
        <{types: [{name: 'date', typeCheck: 'dateTypeCheck'}]}
        {action: restaurant.checkDate}
        >{call: '시간선택'}
        <{if: 'true'}
        >{repeat: 1, options: {prefix: '날짜가 아닙니다.\n', postfix: '\n\n취소하고 처음으로가려면\n"시작"이라고 말씀해주세요.'}}
    시간선택:<false
    >예약하실 시간을 말씀해 주세요.
        <{types: [{name: 'time', typeCheck: 'timeTypeCheck'}]}
        >{call: '인원선택'}
        <{if: 'true'}
        >{repeat: 1, options: {prefix: '시간이 아닙니다.\n', postfix: '\n\n예약 진행을 취소하시려면\n"시작"이라고 말씀해주세요.'}}
    인원선택:<false
    >몇명이 오실지 말씀해 주세요
        <{types: [{name: 'numOfPerson', typeCheck: 'numOfPersonTypeCheck'}]}
        >{call: '예약자명'}
        <{if: 'true'}
        >{repeat: 1, options: {prefix: '인원수가 아닙니다.\n', postfix: '\n\n예약 진행을 취소하시려면\n"시작"이라고 말씀해주세요.'}}
    예약자명:<false
    >예약하실 이름을 입력해주세요.
        <{if: 'true'}
        'reserveNameTask'
        >{call: '휴대폰번호입력'}
    휴대폰번호입력:<false
    > 휴대폰 번호를 말씀해주세요.
        < {types: [{type : type.mobileType, context: false}]}
        >{call: '예약내용확인'}
//        < {types: [{type : type.mobileType, context: false}]}
//        'smsAuth's
//        >문자메세지(SMS)로 발송된 인증번호를 입력해주세요.
//            </[\d\s]+/
//            >{if: restaurant.smsAuthValid, task: 'smsAuthTask', output: {call: '예약내용확인'}}
//            >{if: 'true', output: {call: 'SMS인증', options: {prefix: '인증번호가 틀렸습니다.\n', postfix: '\n0. 이전\n!. 처음'}}}
        <{if: 'true'}
        >{repeat: 1, options: {prefix: '휴대폰 번호가 아닙니다.\n', postfix: '\n\n예약 진행을 취소하시려면\n"시작"이라고 말씀해주세요.'}}
    예약내용확인:<false
    {action: 'reserveConfirm'}
    > 예약내용을 확인해주세요.\n일시: +dateStr+ +time+\n인원: +numOfPerson+명\n연락처: +mobile+\n다음과 같이 예약신청하시겠습니까?
        <~네
        {action: 'reserveRequest'}
        >예약을 요청하였습니다.\n\n아직 확정이 아닙니다.\n좌석 확인 후 예약완료 문자를 보내 드리겠습니다.

시작:
c<시작
restaurant.startTask
>{if: 'context.botUser.isOwner', output: {call: '예약내역', options: {prefix: '+name+ 인공지능 챗봇입니다.\n사장님께서 접속 하였습니다.\n\n'}}}
>+name+ 인공지능 챗봇입니다.\n문의할 내용을 말씀해주세요.\n\n예시) 위치, 영업시간, 메뉴, 예약

답변없음:
c<> 불편을 끼쳐드려 죄송합니다. 현재 고객님께서 무슨 말씀을 하시는지 이해를 못하였습니다.\n 매장으로 전화하여 안내받으시겠습니까?
   <~네> 매장 전화번호는 +phone+ 입니다.
   <~아니요> +name+에서는 보다 빠르고 정확한 도움을 드리기 위해 노력하겠습니다.

<안녕
>안녕하세요.

