시작:c<~시작> 초기화 메세지 입니다

<찾다> 텍스트 내용을 출력합니다.
</정규식/g> RegExp 매치 되면 내용 출력합니다.
< {if: function(inRaw, inNLP, dialog, context, callback) { if(inRaw == '함수')callback(true);else callback(false); }}
> 조건이 true이면 내용을 출력합니다
  
< {regexp: /string 조건/g, if: "context.bot.botName == 'sample'"}
> string 조건이 true이면 내용을 출력합니다
  
< {types: ['mobileType']}
> 휴대폰 +mobile+ 매치 되면 내용을 출력합니다.
< {regexp: /정규식/g, type: ['mobileType'], if: function(inRaw, inNLP, dialog, context, callback) {callback(true);}}
> 모두 매치 되면 내용을 출력합니다.

c< 여러
c< /여러/g
> 여러개 중에 하나 일치 되면 표시합니다.
  

< 추가 표시
> {text: '추가표시', buttons: ['메뉴1', '메뉴2']}

// Task 호출
< Task 호출
{ name: 'helloworld',
  action: function (task, context, callback) {
    task.doc = { text: 'hello world' };
    callback(task, context);
  }
}
> +text+\n task에서 저장한 내용 표시

< 외부 Task
helloworldTask2
> +text+\n task에서 저장한 내용 표시

< Task 리스트
sampleListTask
> #doc#+index+. +title+\n# task에서 저장한 내용 표시

호출1:< 호출대기
> 첫번째 다이얼로그가 호출되었을 때 출력됩니다.
< 호출 하다 1
> {call: '호출1'}

호출2:
< false
> 두번째 다이얼로그가 호출되었을 때 출력됩니다.      // 사용자 입력에 대한 match 없이 호출에만 사용됨
< 호출 하다 2
> {call: '호출2'}

<재시> {start: 1}     // 시작
<이전> {up: 1}        // 상위 (대부분은 이전에 사용됨)
<뒤로> {back: 1}      // 뒤로 숫자 만큼
<다시> {repeat: 1}    // 재질문
<custom> function(dialog, context, print, callback) { print('직접 출력 및 custom 처리'); callback(true); }
  

<옵션 1> {call: '호출1', options: {output: '표시되는 내용 교체'}}
<옵션 2> {call: '호출1', options: {prefix: '앞에\n'}}
<옵션 3> {call: '호출1', options: {postfix: '\n뒤에'}}

<완료 확인
> 다음 내용으로 처리하시겠습니가? 추가할 일이 있으면 "추가"라고 말씀해주세요,
    <추가> {returnCall: '반환'}                      // return와 같이 쓰면 다음으로 가지않고 호출한 곳으로 돌아감
    <네> 완료되었습니다

반환:
< 반환,
> 추가할 내용을 말씀해주세요.,
    < 호출 반환
    > {call: '호출1', return: 1}            // return: 1이 있으면 returnCall로 불린경우 호출된 곳으로 돌아가고, 아니면 원래데로 call 등 output 처리


// 하위이동 children
< 하위 질문 
> 1.메뉴1\n2.메뉴2\n3.메뉴3
    <1> 메뉴1 내용입니다.
    <2> 메뉴2 내용입니다.
    <3> 메뉴3 내용입니다.


// 상위이동 {up: 1}
<상위 질문> 1.메뉴1\n2.메뉴2,
    <1> 메뉴1 내용입니다.\n9.이전,
        <9> {up: 1 }
    <2> 메뉴2 내용입니다.\n9.이전,
        <9> {up: 1}

< 랜덤
> 랜덤 첫번재 경우입니다.
> 랜덤 두번째 경우입니다.

< 조건
> if(context.bot.botName == 'sample') 첫번재 조건이 참인 경우입니다.
> if(function(dialog, context, callback) {callback(false);}) 두번째 조건이 참인 경우입니다.
> if(function(dialog, context, callback) {callback(true);}) 세번째 조건이 참인 경우입니다.

호출3:
< false
> 호출되었을 때만 표시됩니다

<> 매칭되는 문장이 없습니다.                                     // input이 없으면 순서가 오면 무조건 표시 gambit 역활



< moneybrain
moneybrainTask
> +text+\n task에서 저장한 내용 표시


< sample 3
sampleTask3
> +text+\n task에서 저장한 내용 표시

< other task
'otherTask'
> +text+\n task에서 저장한 내용 표시
