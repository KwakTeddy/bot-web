< ~저번 ~배달
'orderHistoryTask'
> if(function(dialog, context, callback) {if(dialog.task.doc != undefined && dialog.task.doc.length == 1) {context.dialog['restaurant'] = dialog.task.doc[0]['restaurant'];context.dialog['menus'] = dialog.task.doc[0]['menus']; callback(true);} else {callback(false);}}) {call: '주문확인'}
> if(dialog.task.doc != undefined && dialog.task.doc.length > 1) 어떤 걸 배달해 드릴까요?\n#history#+index+. +orderDate+\n+restaurantName+\n+menu+ +totalPrice+원\n\n#
    <{regexp: /~배달/, types: [{name: 'history', typeCheck: 'listTypeCheck'}]}
    <types: [{name: 'history', typeCheck: 'listTypeCheck'}]}
    'historyToOrderTask'
    > {call: '주문확인'}
> if(dialog.task.doc == undefined || dialog.task.doc.length == 0) 배달 내역이 없습니다.

< {regexp: /(~무엇|~배달|~내역)/, types: [{name: 'date', typeCheck: 'dateRangeTypeCheck'}]}
< ~무엇 ~배달
< ~배달 ~내역
< ~내역
'orderHistoryTask'
> if(dialog.task.doc != undefined && dialog.task.doc.length > 0) 배달 주문한 내역 알려드릴께요.\n#history#+index+. +orderDate+ +restaurantName+에서 +menu+ +totalPrice+원\n# \n똑같이 주문 하시려면 주문할 번호와 같이 "배달"이라고 말씀해주세요.
    <{ regexp: /~전페이지/} > {repeat: 1, options: {page: 'pre'}}
    < {regexp: /^<$/} > {repeat: 1, options: {page: 'pre'}}
    < {regexp: /~다음페이지/} > {repeat: 1, options: {page: 'next'}}
    < {regexp: /^>$/} > {repeat: 1, options: {page: 'next'}}

    <{regexp: /~배달/, types: [{name: 'history', typeCheck: 'listTypeCheck'}]}
    <{types: [{name: 'history', typeCheck: 'listTypeCheck'}]}
    'historyToOrderTask'
    > {call: '주문확인'}
> if(dialog.task.doc == undefined || dialog.task.doc.length == 0) 배달 내역이 없습니다.

< /취소/
'currentOrderTask'
> if(dialog.task.doc != undefined && dialog.task.doc.length > 0) 배달 중인 목록 입니다.\n#history#+index+. [+status+] +orderDate+ +restaurantName+에서 +menu+ +totalPrice+원\n#\n"요청" 중인 주문만 취소할 수 있습니다.\n취소하시려는 주문의 번호를 말씀해주세요.
    <{ regexp: /~전페이지/} > {repeat: 1, options: {page: 'pre'}}
    < {regexp: /^<$/} > {repeat: 1, options: {page: 'pre'}}
    < {regexp: /~다음페이지/} > {repeat: 1, options: {page: 'next'}}
    < {regexp: /^>$/} > {repeat: 1, options: {page: 'next'}}

//    <{regexp: /~배달/, types: [{name: 'history', typeCheck: 'listTypeCheck'}]}
    <{types: [{name: 'history', typeCheck: 'listTypeCheck'}]}
    > 정말 주문을 취소하시겠습니다?
        <~네
        'orderCancel'
        >주문이 취소 되었습니다.
        <~아니요
        >감사합니다~ 필요하실 때 불러주세요~
> if(dialog.task.doc == undefined || dialog.task.doc.length == 0) 배달 중인 주문이 없습니다.


< yo
{action: 'yoAddress'}
> 완료

< yt
{action: 'yo'}
> 완료

< bae
{action: 'bae'}
> 완료

< bt
{action: 'bt'}
> 완료

< update dump
{action: 'updateDump'}
> 완료